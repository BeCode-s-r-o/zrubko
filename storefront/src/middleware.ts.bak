import { NextRequest, NextResponse } from "next/server"

const DEFAULT_REGION = process.env.NEXT_PUBLIC_DEFAULT_REGION || "us"

/**
 * Simplified middleware for development
 */
export async function middleware(request: NextRequest) {
  try {
    // Get the pathname
    const pathname = request.nextUrl.pathname

    // Skip middleware for static files and API routes
    if (
      pathname.startsWith('/_next/') ||
      pathname.startsWith('/api/') ||
      pathname.includes('.') // Skip files with extensions
    ) {
      return NextResponse.next()
    }

    // Check if URL already has a country code
    const urlCountryCode = pathname.split("/")[1]?.toLowerCase()
    
    // List of common country codes - simplified version
    const countryCodes = ['us', 'eu', 'gb', 'de', 'fr', 'sk']
    
    if (countryCodes.includes(urlCountryCode)) {
      return NextResponse.next()
    }

    // Redirect to default region if no country code in URL
    if (pathname === '/' || !countryCodes.includes(urlCountryCode)) {
      const newUrl = new URL(`/${DEFAULT_REGION}${pathname === '/' ? '' : pathname}`, request.url)
      return NextResponse.redirect(newUrl)
    }

    return NextResponse.next()
  } catch (error) {
    console.error("Middleware error:", error)
    return NextResponse.next()
  }
}

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - api (API routes)
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     * - public files (public folder)
     */
    '/((?!api|_next/static|_next/image|favicon.ico|.*\\.png|.*\\.jpg|.*\\.jpeg|.*\\.gif|.*\\.svg).*)'
  ],
}
